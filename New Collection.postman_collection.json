{
	"info": {
		"_postman_id": "d4b23b06-f17d-440a-9f34-2ce4bedd62e0",
		"name": "New Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "getAllUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "sakshi",
							"type": "text"
						},
						{
							"key": "username",
							"value": "sakshi20000",
							"type": "text"
						},
						{
							"key": "email",
							"value": "sakshi@yopmail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Delhi@123",
							"type": "text"
						},
						{
							"key": "role",
							"value": "Subject Expert",
							"type": "text"
						},
						{
							"key": "skills",
							"value": "java",
							"type": "text"
						}
					]
				},
				"url": "{{url3}}/resume/signup"
			},
			"response": []
		},
		{
			"name": "getAllRecruitment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"const schema={\r",
							"\r",
							"\r",
							"\r",
							"  \"type\": \"array\",\r",
							"\r",
							"\r",
							"\r",
							"  \"properties\": {\r",
							"\r",
							"\r",
							"\r",
							"    \"id\": {\r",
							"\r",
							"\r",
							"\r",
							"          \"type\": \"number\",\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    },\r",
							"\r",
							"\r",
							"\r",
							"    \"name\": {\r",
							"\r",
							"\r",
							"\r",
							"      \"type\": \"string\"\r",
							"\r",
							"\r",
							"\r",
							"    },\r",
							"\r",
							"     \"username\": {\r",
							"\r",
							"\r",
							"\r",
							"          \"type\": \"string\",\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    },\r",
							"\r",
							"     \"email\": {\r",
							"\r",
							"\r",
							"\r",
							"          \"type\": \"string\",\r",
							"\r",
							"            \r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    }, \"password\": {\r",
							"\r",
							"\r",
							"\r",
							"           \"type\": \"string\",\r",
							"\r",
							"            \r",
							"\r",
							"\r",
							"\r",
							"    },\r",
							"    \"role\": {\r",
							"\r",
							"\r",
							"\r",
							"           \"type\": \"string\",\r",
							"\r",
							"\r",
							"    },\r",
							"    \"skills\": {\r",
							"\r",
							"\r",
							"\r",
							"           \"type\": \"string\",\r",
							"\r",
							"            \r",
							"\r",
							"    },\r",
							"\r",
							"            \r",
							"\r",
							"\r",
							"\r",
							"\r",
							"   \r",
							"\r",
							"    },\r",
							"\r",
							"\r",
							"\r",
							"    \"required\": [\r",
							"\r",
							"\r",
							"\r",
							"    \"id\",\r",
							"\r",
							"\r",
							"\r",
							"    \"name\",\r",
							"\r",
							"    \r",
							"\r",
							"    \"username\",\r",
							"\r",
							"    \r",
							"\r",
							"    \"email\",\r",
							"\r",
							"    \r",
							"\r",
							"    \"password\", \r",
							"\r",
							"\r",
							"\r",
							"    \"role\",\r",
							"\r",
							"\r",
							"\r",
							"    \"skills\",\r",
							"    ]\r",
							"\r",
							"\r",
							"\r",
							"    };\r",
							"\r",
							"\r",
							"\r",
							"    pm.test(\"Schema Validated\", function () { \r",
							"\r",
							"\r",
							"\r",
							"    pm.response.to.have.jsonSchema(schema); \r",
							"\r",
							"\r",
							"\r",
							"    });\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{url3}}/resume/signup"
			},
			"response": []
		},
		{
			"name": "getAllRecruitment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than  2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"const schema={\r",
							"\r",
							"\r",
							"\r",
							"  \"type\": \"array\",\r",
							"\r",
							"\r",
							"\r",
							"  \"properties\": {\r",
							"\r",
							"\r",
							"\r",
							"    \"id\": {\r",
							"\r",
							"\r",
							"\r",
							"          \"type\": \"number\",\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    },\r",
							"\r",
							"\r",
							"\r",
							"    \"name\": {\r",
							"\r",
							"\r",
							"\r",
							"      \"type\": \"string\"\r",
							"\r",
							"\r",
							"\r",
							"    },\r",
							"\r",
							"     \"category\": {\r",
							"\r",
							"\r",
							"\r",
							"          \"type\": \"string\",\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    },\r",
							"\r",
							"     \"start_date\": {\r",
							"\r",
							"\r",
							"\r",
							"          \"type\": \"string\",\r",
							"\r",
							"            \r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    }, \"end_date\": {\r",
							"\r",
							"\r",
							"\r",
							"           \"type\": \"string\",\r",
							"\r",
							"            \r",
							"\r",
							"\r",
							"\r",
							"    },\r",
							"\r",
							"   \r",
							"\r",
							"    },\r",
							"\r",
							"\r",
							"\r",
							"    \"required\": [\r",
							"\r",
							"\r",
							"\r",
							"    \"id\",\r",
							"\r",
							"\r",
							"\r",
							"    \"name\",\r",
							"\r",
							"    \r",
							"\r",
							"    \"category\",\r",
							"\r",
							"    \r",
							"\r",
							"    \"start_date\",\r",
							"\r",
							"    \r",
							"\r",
							"    \"end_date\", ]\r",
							"\r",
							"\r",
							"\r",
							"    };\r",
							"\r",
							"\r",
							"\r",
							"    pm.test(\"Schema Validated\", function () { \r",
							"\r",
							"\r",
							"\r",
							"    pm.response.to.have.jsonSchema(schema); \r",
							"\r",
							"\r",
							"\r",
							"    });\r",
							"    \r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": "{{url3}}/resume/getRecruitment"
			},
			"response": []
		},
		{
			"name": "checkScore",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 600ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
							"});\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Upload result file to update the score\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url3}}/resume/checkScore?rec_id=3",
					"host": [
						"{{url3}}"
					],
					"path": [
						"resume",
						"checkScore"
					],
					"query": [
						{
							"key": "rec_id",
							"value": "3"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "variable_key",
			"value": ""
		}
	]
}